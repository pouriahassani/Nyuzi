//===--------- NyuziSubtarget.h - Define Subtarget for the Nyuzi -----------*-//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the Nyuzi specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_NYUZI_NYUZISUBTARGET_H
#define LLVM_LIB_TARGET_NYUZI_NYUZISUBTARGET_H

#include "NyuziFrameLowering.h"
#include "NyuziISelLowering.h"
#include "NyuziInstrInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include <string>

#define GET_SUBTARGETINFO_HEADER
#include "NyuziGenSubtargetInfo.inc"

namespace llvm {
class StringRef;

class NyuziSubtarget : public NyuziGenSubtargetInfo {
  virtual void anchor();
  NyuziInstrInfo InstrInfo;
  NyuziTargetLowering TargetLowering;
  SelectionDAGTargetInfo TSInfo;
  NyuziFrameLowering FrameLowering;
  InstrItineraryData InstrItins;

public:
  NyuziSubtarget(const Triple &TT, const std::string &CPU,
                 const std::string &FS, const NyuziTargetMachine &TM);

  /// ParseSubtargetFeatures - Parses features string setting specified
  /// subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);
  const NyuziInstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const TargetFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const NyuziRegisterInfo *getRegisterInfo() const override {
    return &InstrInfo.getRegisterInfo();
  }
  const NyuziTargetLowering *getTargetLowering() const override {
    return &TargetLowering;
  }
  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }
  bool enableMachineScheduler() const override { return true; }
  bool enablePostRAScheduler() const override { return true; }
  const InstrItineraryData *getInstrItineraryData() const override {
    return &InstrItins;
  }
};

} // end namespace llvm

#endif
